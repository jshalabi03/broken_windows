/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.7.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'java'
    id 'application'
    id 'java-library-distribution'
    id 'jacoco'
}

repositories {
    // Use JCenter for resolving dependencies.
    mavenCentral()
    // jcenter()
}

dependencies {
    // Use JUnit test framework.
    testImplementation 'junit:junit:4.13'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:29.0-jre'

    implementation 'com.google.code.gson:gson:2.8.6'

    implementation 'commons-cli:commons-cli:1.4'

    implementation 'commons-io:commons-io:2.8.0'

    implementation 'org.apache.commons:commons-configuration2:2.6'

    implementation 'commons-beanutils:commons-beanutils:1.9.4'

    implementation 'com.github.easy-develop:properties:1.0.1'
}

jar {
    manifest {
        attributes(
                'Main-Class': 'mech.mania.competitor.Bot'
        )
    }
    baseName 'mm27-java-sp'
}

compileJava {
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
}

// https://stackoverflow.com/questions/4871656/using-gradle-to-build-a-jar-with-dependencies
task fatJar(type: Jar) {
    manifest.from jar.manifest
        classifier = 'all'
        duplicatesStrategy = DuplicatesStrategy.EXCLUDE

        from {
            configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
        } {
            exclude "META-INF/*.SF"
            exclude "META-INF/*.DSA"
            exclude "META-INF/*.RSA"
        }
    with jar

    baseName 'mm27-java-sp'
}

artifacts {
    archives fatJar
}

test {
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
}
